package main

import (
	"context"
	"fmt"
	"log"

	"github.com/celestix/gotgproto"
	"github.com/celestix/gotgproto/sessionMaker"
	"github.com/gotd/td/tg"
)

const (
	API_ID   int    = 28083130
	API_HASH string = "815b73e4ce431a46e405f9f5f730640f"
	SESSION  string = "eyJWZXJzaW9uIjoxLCJEYXRhIjoiZXlKV1pYSnphVzl1SWpveExDSkVZWFJoSWpwN0lrTnZibVpwWnlJNmV5SkNiRzlqYTJWa1RXOWtaU0k2Wm1Gc2MyVXNJa1p2Y21ObFZISjVTWEIyTmlJNlptRnNjMlVzSWtSaGRHVWlPakUzTURrME5UUTVOekFzSWtWNGNHbHlaWE1pT2pFM01EazBOVGd3TlRnc0lsUmxjM1JOYjJSbElqcG1ZV3h6WlN3aVZHaHBjMFJESWpveUxDSkVRMDl3ZEdsdmJuTWlPbHQ3SWtac1lXZHpJam93TENKSmNIWTJJanBtWVd4elpTd2lUV1ZrYVdGUGJteDVJanBtWVd4elpTd2lWRU5RVDJKbWRYTmpZWFJsWkU5dWJIa2lPbVpoYkhObExDSkRSRTRpT21aaGJITmxMQ0pUZEdGMGFXTWlPbVpoYkhObExDSlVhR2x6VUc5eWRFOXViSGtpT21aaGJITmxMQ0pKUkNJNk1Td2lTVkJCWkdSeVpYTnpJam9pTVRRNUxqRTFOQzR4TnpVdU5UUWlMQ0pRYjNKMElqbzBORE1zSWxObFkzSmxkQ0k2Ym5Wc2JIMHNleUpHYkdGbmN5STZNVFlzSWtsd2RqWWlPbVpoYkhObExDSk5aV1JwWVU5dWJIa2lPbVpoYkhObExDSlVRMUJQWW1aMWMyTmhkR1ZrVDI1c2VTSTZabUZzYzJVc0lrTkVUaUk2Wm1Gc2MyVXNJbE4wWVhScFl5STZkSEoxWlN3aVZHaHBjMUJ2Y25SUGJteDVJanBtWVd4elpTd2lTVVFpT2pFc0lrbFFRV1JrY21WemN5STZJakUwT1M0eE5UUXVNVGMxTGpVMElpd2lVRzl5ZENJNk5EUXpMQ0pUWldOeVpYUWlPbTUxYkd4OUxIc2lSbXhoWjNNaU9qRXNJa2x3ZGpZaU9uUnlkV1VzSWsxbFpHbGhUMjVzZVNJNlptRnNjMlVzSWxSRFVFOWlablZ6WTJGMFpXUlBibXg1SWpwbVlXeHpaU3dpUTBST0lqcG1ZV3h6WlN3aVUzUmhkR2xqSWpwbVlXeHpaU3dpVkdocGMxQnZjblJQYm14NUlqcG1ZV3h6WlN3aVNVUWlPakVzSWtsUVFXUmtjbVZ6Y3lJNklqSXdNREU2TUdJeU9EcG1Nak5rT21Zd01ERTZNREF3TURvd01EQXdPakF3TURBNk1EQXdZU0lzSWxCdmNuUWlPalEwTXl3aVUyVmpjbVYwSWpwdWRXeHNmU3g3SWtac1lXZHpJam93TENKSmNIWTJJanBtWVd4elpTd2lUV1ZrYVdGUGJteDVJanBtWVd4elpTd2lWRU5RVDJKbWRYTmpZWFJsWkU5dWJIa2lPbVpoYkhObExDSkRSRTRpT21aaGJITmxMQ0pUZEdGMGFXTWlPbVpoYkhObExDSlVhR2x6VUc5eWRFOXViSGtpT21aaGJITmxMQ0pKUkNJNk1pd2lTVkJCWkdSeVpYTnpJam9pTVRRNUxqRTFOQzR4TmpjdU5UQWlMQ0pRYjNKMElqbzBORE1zSWxObFkzSmxkQ0k2Ym5Wc2JIMHNleUpHYkdGbmN5STZNVFlzSWtsd2RqWWlPbVpoYkhObExDSk5aV1JwWVU5dWJIa2lPbVpoYkhObExDSlVRMUJQWW1aMWMyTmhkR1ZrVDI1c2VTSTZabUZzYzJVc0lrTkVUaUk2Wm1Gc2MyVXNJbE4wWVhScFl5STZkSEoxWlN3aVZHaHBjMUJ2Y25SUGJteDVJanBtWVd4elpTd2lTVVFpT2pJc0lrbFFRV1JrY21WemN5STZJakUwT1M0eE5UUXVNVFkzTGpReElpd2lVRzl5ZENJNk5EUXpMQ0pUWldOeVpYUWlPbTUxYkd4OUxIc2lSbXhoWjNNaU9qSXNJa2x3ZGpZaU9tWmhiSE5sTENKTlpXUnBZVTl1YkhraU9uUnlkV1VzSWxSRFVFOWlablZ6WTJGMFpXUlBibXg1SWpwbVlXeHpaU3dpUTBST0lqcG1ZV3h6WlN3aVUzUmhkR2xqSWpwbVlXeHpaU3dpVkdocGMxQnZjblJQYm14NUlqcG1ZV3h6WlN3aVNVUWlPaklzSWtsUVFXUmtjbVZ6Y3lJNklqRTBPUzR4TlRRdU1UWTNMakl5TXlJc0lsQnZjblFpT2pRME15d2lVMlZqY21WMElqcHVkV3hzZlN4N0lrWnNZV2R6SWpveExDSkpjSFkySWpwMGNuVmxMQ0pOWldScFlVOXViSGtpT21aaGJITmxMQ0pVUTFCUFltWjFjMk5oZEdWa1QyNXNlU0k2Wm1Gc2MyVXNJa05FVGlJNlptRnNjMlVzSWxOMFlYUnBZeUk2Wm1Gc2MyVXNJbFJvYVhOUWIzSjBUMjVzZVNJNlptRnNjMlVzSWtsRUlqb3lMQ0pKVUVGa1pISmxjM01pT2lJeU1EQXhPakEyTjJNNk1EUmxPRHBtTURBeU9qQXdNREE2TURBd01Eb3dNREF3T2pBd01HRWlMQ0pRYjNKMElqbzBORE1zSWxObFkzSmxkQ0k2Ym5Wc2JIMHNleUpHYkdGbmN5STZNeXdpU1hCMk5pSTZkSEoxWlN3aVRXVmthV0ZQYm14NUlqcDBjblZsTENKVVExQlBZbVoxYzJOaGRHVmtUMjVzZVNJNlptRnNjMlVzSWtORVRpSTZabUZzYzJVc0lsTjBZWFJwWXlJNlptRnNjMlVzSWxSb2FYTlFiM0owVDI1c2VTSTZabUZzYzJVc0lrbEVJam95TENKSlVFRmtaSEpsYzNNaU9pSXlNREF4T2pBMk4yTTZNRFJsT0RwbU1EQXlPakF3TURBNk1EQXdNRG93TURBd09qQXdNR0lpTENKUWIzSjBJam8wTkRNc0lsTmxZM0psZENJNmJuVnNiSDBzZXlKR2JHRm5jeUk2TUN3aVNYQjJOaUk2Wm1Gc2MyVXNJazFsWkdsaFQyNXNlU0k2Wm1Gc2MyVXNJbFJEVUU5aVpuVnpZMkYwWldSUGJteDVJanBtWVd4elpTd2lRMFJPSWpwbVlXeHpaU3dpVTNSaGRHbGpJanBtWVd4elpTd2lWR2hwYzFCdmNuUlBibXg1SWpwbVlXeHpaU3dpU1VRaU9qTXNJa2xRUVdSa2NtVnpjeUk2SWpFME9TNHhOVFF1TVRjMUxqRXdNQ0lzSWxCdmNuUWlPalEwTXl3aVUyVmpjbVYwSWpwdWRXeHNmU3g3SWtac1lXZHpJam94Tml3aVNYQjJOaUk2Wm1Gc2MyVXNJazFsWkdsaFQyNXNlU0k2Wm1Gc2MyVXNJbFJEVUU5aVpuVnpZMkYwWldSUGJteDVJanBtWVd4elpTd2lRMFJPSWpwbVlXeHpaU3dpVTNSaGRHbGpJanAwY25WbExDSlVhR2x6VUc5eWRFOXViSGtpT21aaGJITmxMQ0pKUkNJNk15d2lTVkJCWkdSeVpYTnpJam9pTVRRNUxqRTFOQzR4TnpVdU1UQXdJaXdpVUc5eWRDSTZORFF6TENKVFpXTnlaWFFpT201MWJHeDlMSHNpUm14aFozTWlPakVzSWtsd2RqWWlPblJ5ZFdVc0lrMWxaR2xoVDI1c2VTSTZabUZzYzJVc0lsUkRVRTlpWm5WelkyRjBaV1JQYm14NUlqcG1ZV3h6WlN3aVEwUk9JanBtWVd4elpTd2lVM1JoZEdsaklqcG1ZV3h6WlN3aVZHaHBjMUJ2Y25SUGJteDVJanBtWVd4elpTd2lTVVFpT2pNc0lrbFFRV1JrY21WemN5STZJakl3TURFNk1HSXlPRHBtTWpOa09tWXdNRE02TURBd01Eb3dNREF3T2pBd01EQTZNREF3WVNJc0lsQnZjblFpT2pRME15d2lVMlZqY21WMElqcHVkV3hzZlN4N0lrWnNZV2R6SWpvd0xDSkpjSFkySWpwbVlXeHpaU3dpVFdWa2FXRlBibXg1SWpwbVlXeHpaU3dpVkVOUVQySm1kWE5qWVhSbFpFOXViSGtpT21aaGJITmxMQ0pEUkU0aU9tWmhiSE5sTENKVGRHRjBhV01pT21aaGJITmxMQ0pVYUdselVHOXlkRTl1YkhraU9tWmhiSE5sTENKSlJDSTZOQ3dpU1ZCQlpHUnlaWE56SWpvaU1UUTVMakUxTkM0eE5qY3VPVElpTENKUWIzSjBJam8wTkRNc0lsTmxZM0psZENJNmJuVnNiSDBzZXlKR2JHRm5jeUk2TVRZc0lrbHdkallpT21aaGJITmxMQ0pOWldScFlVOXViSGtpT21aaGJITmxMQ0pVUTFCUFltWjFjMk5oZEdWa1QyNXNlU0k2Wm1Gc2MyVXNJa05FVGlJNlptRnNjMlVzSWxOMFlYUnBZeUk2ZEhKMVpTd2lWR2hwYzFCdmNuUlBibXg1SWpwbVlXeHpaU3dpU1VRaU9qUXNJa2xRUVdSa2NtVnpjeUk2SWpFME9TNHhOVFF1TVRZM0xqa3lJaXdpVUc5eWRDSTZORFF6TENKVFpXTnlaWFFpT201MWJHeDlMSHNpUm14aFozTWlPakVzSWtsd2RqWWlPblJ5ZFdVc0lrMWxaR2xoVDI1c2VTSTZabUZzYzJVc0lsUkRVRTlpWm5WelkyRjBaV1JQYm14NUlqcG1ZV3h6WlN3aVEwUk9JanBtWVd4elpTd2lVM1JoZEdsaklqcG1ZV3h6WlN3aVZHaHBjMUJ2Y25SUGJteDVJanBtWVd4elpTd2lTVVFpT2pRc0lrbFFRV1JrY21WemN5STZJakl3TURFNk1EWTNZem93TkdVNE9tWXdNRFE2TURBd01Eb3dNREF3T2pBd01EQTZNREF3WVNJc0lsQnZjblFpT2pRME15d2lVMlZqY21WMElqcHVkV3hzZlN4N0lrWnNZV2R6SWpveUxDSkpjSFkySWpwbVlXeHpaU3dpVFdWa2FXRlBibXg1SWpwMGNuVmxMQ0pVUTFCUFltWjFjMk5oZEdWa1QyNXNlU0k2Wm1Gc2MyVXNJa05FVGlJNlptRnNjMlVzSWxOMFlYUnBZeUk2Wm1Gc2MyVXNJbFJvYVhOUWIzSjBUMjVzZVNJNlptRnNjMlVzSWtsRUlqbzBMQ0pKVUVGa1pISmxjM01pT2lJeE5Ea3VNVFUwTGpFMk5pNHhNakFpTENKUWIzSjBJam8wTkRNc0lsTmxZM0psZENJNmJuVnNiSDBzZXlKR2JHRm5jeUk2TXl3aVNYQjJOaUk2ZEhKMVpTd2lUV1ZrYVdGUGJteDVJanAwY25WbExDSlVRMUJQWW1aMWMyTmhkR1ZrVDI1c2VTSTZabUZzYzJVc0lrTkVUaUk2Wm1Gc2MyVXNJbE4wWVhScFl5STZabUZzYzJVc0lsUm9hWE5RYjNKMFQyNXNlU0k2Wm1Gc2MyVXNJa2xFSWpvMExDSkpVRUZrWkhKbGMzTWlPaUl5TURBeE9qQTJOMk02TURSbE9EcG1NREEwT2pBd01EQTZNREF3TURvd01EQXdPakF3TUdJaUxDSlFiM0owSWpvME5ETXNJbE5sWTNKbGRDSTZiblZzYkgwc2V5SkdiR0ZuY3lJNk1Td2lTWEIyTmlJNmRISjFaU3dpVFdWa2FXRlBibXg1SWpwbVlXeHpaU3dpVkVOUVQySm1kWE5qWVhSbFpFOXViSGtpT21aaGJITmxMQ0pEUkU0aU9tWmhiSE5sTENKVGRHRjBhV01pT21aaGJITmxMQ0pVYUdselVHOXlkRTl1YkhraU9tWmhiSE5sTENKSlJDSTZOU3dpU1ZCQlpHUnlaWE56SWpvaU1qQXdNVG93WWpJNE9tWXlNMlk2WmpBd05Ub3dNREF3T2pBd01EQTZNREF3TURvd01EQmhJaXdpVUc5eWRDSTZORFF6TENKVFpXTnlaWFFpT201MWJHeDlMSHNpUm14aFozTWlPakFzSWtsd2RqWWlPbVpoYkhObExDSk5aV1JwWVU5dWJIa2lPbVpoYkhObExDSlVRMUJQWW1aMWMyTmhkR1ZrVDI1c2VTSTZabUZzYzJVc0lrTkVUaUk2Wm1Gc2MyVXNJbE4wWVhScFl5STZabUZzYzJVc0lsUm9hWE5RYjNKMFQyNXNlU0k2Wm1Gc2MyVXNJa2xFSWpvMUxDSkpVRUZrWkhKbGMzTWlPaUk1TVM0eE1EZ3VOVFl1TVRNeUlpd2lVRzl5ZENJNk5EUXpMQ0pUWldOeVpYUWlPbTUxYkd4OUxIc2lSbXhoWjNNaU9qRTJMQ0pKY0hZMklqcG1ZV3h6WlN3aVRXVmthV0ZQYm14NUlqcG1ZV3h6WlN3aVZFTlFUMkptZFhOallYUmxaRTl1YkhraU9tWmhiSE5sTENKRFJFNGlPbVpoYkhObExDSlRkR0YwYVdNaU9uUnlkV1VzSWxSb2FYTlFiM0owVDI1c2VTSTZabUZzYzJVc0lrbEVJam8xTENKSlVFRmtaSEpsYzNNaU9pSTVNUzR4TURndU5UWXVNVE15SWl3aVVHOXlkQ0k2TkRRekxDSlRaV055WlhRaU9tNTFiR3g5WFN3aVJFTlVlSFJFYjIxaGFXNU9ZVzFsSWpvaVlYQjJNeTV6ZEdWc0xtTnZiU0lzSWxSdGNGTmxjM05wYjI1eklqb3dMQ0pYWldKbWFXeGxSRU5KUkNJNk5IMHNJa1JESWpveUxDSkJaR1J5SWpvaUlpd2lRWFYwYUV0bGVTSTZJbXRsYUdKcE5YTk5VbmsxWTIxMmNsWTNlRlY2Wlc1S1EwWXZNVkJrTURaVGRITjFXRkZYY25ONFFXVjRUVGhsWmtSYU9IRnBVazFHVmpFeE9FTkxUVE1yUnl0U1prRlNhV0o2V1daT056Rm1PRUZpY1RCMGFrTklURmcwVUd3ek5uTnpZMjUyVFhwcGVWSTFSRVl3ZUZCeFZWWjNOMFJaVVhWTlRGaHFkUzlYWjJGMVZGRlpia3MxYlc5YVQza3lUWGw2U0VSM2VIQTRTR1V6YWxkVlFVVnhZa2RHWnpGR1MxTjBNeXR2YTJ0SmVsTnRVU3RJVUhkVlQxUXZaRVUwYzFkQlZWQjZRVlZRYnpWUWVubFlXaTlqUTNCNGVsVjJOa2h2YTJoa1J5OUVXR2hWZUN0UFZtTk9lbTExVm5adVREUjZMMEZMY0VoTVRFSlpOMVZQVWpGcmNXcFhia2RKV0hWRVRYUm9iVlZUT1ZwUFNYWXhXa2xIVkcxWWJFRlFjV0pMWkd0d2RtRnZjWFJpV1RWb09HOXNWSEUwUTJZNGRFZHZla3RuZGt0UFFVTkpWM0JQTUdwd01IVnZhblZsTUhGYVNIZDNkejA5SWl3aVFYVjBhRXRsZVVsRUlqb2lOa0ZKUjFOaUsxbHFVRGc5SWl3aVUyRnNkQ0k2TFRNd05qYzVPREF6TXpjNU5qVXlPRE00T0RGOWZRPT0ifQo="
)

func main() {
	fmt.Println("here, started")
	clientType := gotgproto.ClientType{
		Phone: "+79062160571",
	}

	client, err := gotgproto.NewClient(
		API_ID,
		API_HASH,
		clientType,
		&gotgproto.ClientOpts{
			InMemory:         true,
			Session:          sessionMaker.StringSession(SESSION),
			DisableCopyright: false,
		},
	)

	if err != nil {
		log.Fatalln("failed to start client:", err)
	}

	resolvedPeer, err := client.API().ContactsResolveUsername(context.Background(), "Reaperhome")
	if err != nil {
		log.Fatalln("failed to resolve peer:", err)
	}
	channel := resolvedPeer.Chats[0].(*tg.Channel)

	msgs, err := client.API().MessagesGetHistory(context.Background(), &tg.MessagesGetHistoryRequest{
		Peer:  channel.AsInputPeer(),
		Limit: 5,
	})

	if err != nil {
		log.Fatalln("failed to send message:", err)
	}

	chanMessages := msgs.(*tg.MessagesChannelMessages)
	for _, msg := range chanMessages.Messages {
		fmt.Println("=========================================================================")
		fmt.Println("=========================================================================")
		fmt.Println(msg.String())
	}

	client.Idle()
}
